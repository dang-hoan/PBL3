<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TtX1R+vZeBzHeH6/U/6cl+q606nyYKdgFhdOL0rVdUjr1VjWxtIG+1JdfzpVHuwUbMV4HwEvHLSenZGe
        mS6YYBbV9ahT5cFOwVadLz0x/ShV1yktvw8kz+1nq6rrUqfKg52C7bpWemuqrldaTuPpmvdP3siH7aiu
        U50qD3YKduqW6aRUXb+0mMbZl3G6fzw2A7arum51qjzYKZiH8T7yD05eQGixjUf3vzhdPsFOVdexTpUH
        OwXzNN5T4AHpi6m6vml7jddieEW6WoJ5qa5rnSoPdgoWYTxQcLzV7BdSdb3TbJ2eXpDG2zbDvFXXuU6V
        BzsFi3RAukN6c6quf6o7NY37+J3qZ5Gq616nyoOdgmX5lfTS9INUXRe1a9cH033ToQkWrboOdqo82ClY
        tvHI9XulcVbgrFRdLzv1zTTeqe96CZapuj52qjzYKVilI9OT08mpun5OtXGKfzya/6h0UIJVqK6bnSoP
        dgrWxXiE+2PT+9IU34HwS+n56dbJm/SwDqrraafKg52CdXSxdJc0BuZnU3XdXfdOS29ID0vXSLBuqutt
        p8qDnYJNcHg6Ov3ndGL6fqquz6tsvEnSOK3/oDTuzx8vjgTrrLoed6o82CnYROPphVdOd0qPS8elcdfB
        V1N1PZ9XY/EYj1d4Y3pquk+6UToswaapruOdKg92CqZmvAjReDzBeI+Cu6fxEsWPT89I49H2L0njVfVG
        x6dX7/b/x39/Tvrj9PB0TBqvYzDeae8SCaakmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0Kny
        YKcA6KmaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KnyYKcA
        6KmaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KnyYKcA6Kma
        CZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KnyYKcA6KmaCZ0q
        D3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KnyYKcA6KmaCZ0qD3YK
        gJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KldZ+5xoFuHJAB6GT/7q5nQ
        pTH7d/1wtwMd+8UEQC9XSNVM6NL3065v73agY3dOAPTyW6maCV06Ne362m4HOvayBEAvL0/VTOjSV9Ku
        U3Y70LEfpyMTAD1cLZ2RqpnQpU+mXe/b7UDX3pkOTgBM2/hZ/65UzYJOvSfteuNuBzr30mQJAJiu8TN+
        3O1bzYBuvS7tevFuB7o3zgSMU0MATMu4q/fEVP3s79gL0q4/2e2AfnK/0HHp6PRLyesEAGye8bN7/Ay/
        SxoP+BuP96p+5nftSWnX/Xc7IEmSpt+9065b7nZAkiRNv5ulfz5FUv1HSZI0zQ5Pu/ZL3V8NUJKkLn0j
        /ZRHRkqS1KO3p5/6s1T9IUmSNK2elX5qPBqw+kOSJGla3TP91JVT9YckSdK0Gm+F/HO+nKo/KEmSptGY
        9efy16n6w5IkaRqNV0U8lwek6g9LkqRp9M+vALin8aIA1R+WJEmb31npsql0Uqr+kiRJ2uw+nPZqvDtQ
        9ZckSdJm9/i0V+O98Ku/JEmSNrurp/P0sVT9RUmStJmd5+n/czwmVX9ZkiRtZo9K+3TpdHqqPoAkSdqs
        zkhjts/k1an6IJIkabN6VZrZbVL1QSRJ0mZ1qzSz/dLJqfpAkiRpMxqv7zNm+pbcL1UfTJIkbUbHpC07
        NHmHQEmSNrMvpoPTtjw8VR9UkiStdw9O2zbOAnwhVR9YkiStZ59Ph6QdGRtE9cElSdJ6Nt7if8cOSp9I
        1T8gSZLWq4+nMbvn4nap+kckSdJ6taXn/c/iTan6hyRJ0nr02jR3V07fT9U/KEmSVtv30hFpIR6dqn9U
        kiSttkekhTkwfShV/7AkSVpN708HpIU6MrkrQJKk9egH6VppKR6Sqk9CkiQtt99LSzPeWegNqfpEJEnS
        cnpN2vK7/e3URdIpqfqEJEnSYvtsulhaiWun8bSD6hOTJEmLadzvf720UvdMZ6XqE5QkSfNtzNzfTmvh
        yan6JCVJ0nw7Nq2N8QCEF6XqE5UkSfPpZWnpD/rbl4OT9wuQJGkxjWffjVm7ls6X3paqT1ySJG2vE9MF
        0lo7LL0nVV+AJEnaWu9OY7ZuhLGlvCVVX4gkSZqtE9KF0kY5f/KYAEmSttcb07hrfSONByv8Vaq+MEmS
        VPfCtLYP+JvVeLrCE5MXC5Ik6bwbs3LMzLV7qt9OjFcM9DbCkiTVjZfWX5tX+Ju36yRvICRJ0s/3+XSD
        NGkXTa9L1TdAkqRujbf0He+w28a90mmp+mZIkjT1xjv6PTRN6v7+WV0jfSBV3xhJkqba+9ORqbUD09iA
        vpuqb5IkSVNpPBj+0emAxNmOSK9P1TdMkqRN77XpCom9+LX00VR98yRJ2rQ+kW6bmMFB6YHpC6n6ZkqS
        tO6Np/Y9II27utmiQ9ND0pdS9c2VJGnd+mL6/XRIYofG6yGPpw2elKpvtiRJq+5TaTyoffzyypyN50re
        Kv1NOj1VF4AkSctqzKJXpTGbWj6ffxUuncZTKf4+VReKJEmL6iPpUelSiRW6enpCGhdIdUFJkrSTxrv0
        fTgdm66aWEOXTfdNr0hfTtUFKUnSvhoPQH95+p10mcSGuWIaDyB8djohnZqqC1qS1LdvpjEjxqwYM2O8
        OB0TdPl083Tv9KT0wjTeofDdaTyK8+tpXBnGSzZWVxRJ0vo3foaPn+XjZ/r42T5+xo+f9eNn/vjZP2bA
        zdLhqZldu/4/V08iU6HrqGMAAAAASUVORK5CYII=
</value>
  </data>
</root>