<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /pyX6rrTqfJgp2AWF04vStV1SOvVWNbG0gb7Ul1/OlUe7BRsxXgfAS8ctJ6dkZ6ZLphgFtX1qFPlwU7B
        Vp0vPTH9KFXXKS2/DyTP7WerqutSp8qDnYLtulZ6a6quV1pO4+ma90/eyIftqK5TnSoPdgp26pbppFRd
        v7SYxtmXcbp/PDYDtqu6bnWqPNgpmIfxPvIPTl5AaLGNR/e/OF0+wU5V17FOlQc7BfM03lPgAemLqbq+
        aXuN12J4RbpagnmprmudKg92ChZhPFBwvNXsF1J1vdNsnZ5ekMbbNsO8Vde5TpUHOwWLdEC6Q3pzqq5/
        qjs1jfv4nepnkarrXqfKg52CZfmV9NL0g1RdF7Vr1wfTfdOhCRatug52qjzYKVi28cj1e6VxVuCsVF0v
        O/XNNN6p73oJlqm6PnaqPNgpWKUj05PTyam6fk61cYp/PJr/qHRQglWorpudKg92CtbFeIT7Y9P70hTf
        gfBL6fnp1smb9LAOqutpp8qDnYJ1dLF0lzQG5mdTdd1d905Lb0gPS9dIsG6q622nyoOdgk1weDo6/ed0
        Yvp+qq7Pq2y8SdI4rf+gNO7PHy+OBOusuh53qjzYKdhE4+mFV053So9Lx6Vx18FXU3U9n1dj8RiPV3hj
        emq6T7pROizBpqmu450qD3YKpma8CNF4PMF4j4K7p/ESxY9Pz0jj0fYvSeNV9UbHp1fv9v/Hf39O+uP0
        8HRMGq9jMN5p7xIJpqSaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqA
        nqqZ0KnyYKcA6KmaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ
        0KnyYKcA6KmaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0Kny
        YKcA6KmaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KnyYKcA
        6KmaCZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqfJgpwDoqZoJnSoPdgqAnqqZ0KnyYKcA6Kma
        CZ0qD3YKgJ6qmdCp8mCnAOipmgmdKg92CoCeqpnQqV1n7nGgW4ckAHoZP/urmdClMft3/XC3Ax37xQRA
        L1dI1Uzo0vfTrm/vdqBjd04A9PJbqZoJXTo17frabgc69rIEQC8vT9VM6NJX0q5TdjvQsR+nIxMAPVwt
        nZGqmdClT6Zd79vtQNfemQ5OAEzb+Fn/rlTNgk69J+16424HOvfSZAkAmK7xM37c7VvNgG69Lu168W4H
        ujfOBIxTQwBMy7ir98RU/ezv2AvSrj/Z7YB+cr/Qceno9EvJ6wQAbJ7xs3v8DL9LGg/4G4/3qn7md+1J
        adf9dzsgSZKm373TrlvudkCSJE2/m6V/PkVS/UdJkjTNDk+79kvdXw1QkqQufSP9lEdGSpLUo7enn/qz
        VP0hSZI0rZ6Vfmo8GrD6Q5IkaVrdM/3UlVP1hyRJ0rQab4X8c76cqj8oSZKm0Zj15/LXqfrDkiRpGo1X
        RTyXB6TqD0uSpGn0z68AuKfxogDVH5YkSZvfWemyqXRSqv6SJEna7D6c9mq8O1D1lyRJ0mb3+LRX473w
        q78kSZI2u6un8/SxVP1FSZK0mZ3n6f9zPCZVf1mSJG1mj0r7dOl0eqo+gCRJ2qzOSGO2z+TVqfogkiRp
        s3pVmtltUvVBJEnSZnWrNLP90smp+kCSJGkzGq/vM2b6ltwvVR9MkiRtRsekLTs0eYdASZI2sy+mg9O2
        PDxVH1SSJK13D07bNs4CfCFVH1iSJK1nn0+HpB0ZG0T1wSVJ0no23uJ/xw5Kn0jVPyBJktarj6cxu+fi
        dqn6RyRJ0nq1pef9z+JNqfqHJEnSevTaNHdXTt9P1T8oSZJW2/fSEWkhHp2qf1SSJK22R6SFOTB9KFX/
        sCRJWk3vTwekhToyuStAkqT16AfpWmkpHpKqT0KSJC2330tLM95Z6A2p+kQkSdJyek3a8rv97dRF0imp
        +oQkSdJi+2y6WFqJa6fxtIPqE5MkSYtp3O9/vbRS90xnpeoTlCRJ823M3N9Oa+HJqfokJUnSfDs2rY3x
        AIQXpeoTlSRJ8+llaekP+tuXg5P3C5AkaTGNZ9+NWbuWzpfelqpPXJIkba8T0wXSWjssvSdVX4AkSdpa
        705jtm6EsaW8JVVfiCRJmq0T0oXSRjl/8pgASZK21xvTuGt9I40HK/xVqr4wSZJU98K0tg/4m9V4usIT
        kxcLkiTpvBuzcszMtXuq306MVwz0NsKSJNWNl9Zfm1f4m7frJG8gJEnSz/f5dIM0aRdNr0vVN0CSpG6N
        t/Qd77Dbxr3Saan6ZkiSNPXGO/o9NE3q/v5ZXSN9IFXfGEmSptr705GptQPT2IC+m6pvkiRJU2k8GP7R
        6YDE2Y5Ir0/VN0ySpE3vtekKib34tfTRVH3zJEnatD6RbpuYwUHpgekLqfpmSpK07o2n9j0gjbu62aJD
        00PSl1L1zZUkad36Yvr9dEhih8brIY+nDZ6Uqm+2JEmr7lNpPKh9/PLKnI3nSt4q/U06PVUXgCRJy2rM
        olelMZtaPp9/FS6dxlMp/j5VF4okSYvqI+lR6VKJFbp6ekIaF0h1QUmStJPGu/R9OB2brppYQ5dN902v
        SF9O1QUpSdK+Gg9Af3n6nXSZxIa5YhoPIHx2OiGdmqoLWpLUt2+mMSPGrBgzY7w4HRN0+XTzdO/0pPTC
        NN6h8N1pPIrz62lcGcZLNlZXFEnS+jd+ho+f5eNn+vjZPn7Gj5/142f++Nk/ZsDN0uGpmV27/j9XTyJT
        oeuoYwAAAABJRU5ErkJggg==
</value>
  </data>
</root>